%{ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Kevin Box
% kbox@hmc.edu
% Oct 31 2023
% Wavetable Generation
%} %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%% phase accumulator calculator

notes4 = [50 261.63 277.18 293.66 311.13 329.63 349.23 369.99 392 415.30 440 466.16 493.88];
fclk = 32000000; %16m?
indexes = 256;
indexVal = 16777216; % 0x01000000
k = indexVal*indexes; %256*0x01000000 for that value

addVal = (k.*notes4)./fclk;

roundedAddVal = round(addVal);

factual = (roundedAddVal.*fclk)./k;
fnoRound = (addVal.*fclk)./k;

error = 100*((notes4-factual)./notes4);
errorNoRound = 100*((notes4-fnoRound)./notes4);

factualHigh = round((200000*fclk)/k);


%% wave table gen
clear
t = 0:0.00390625:1;
waveTable = uint8(127*sin(2*pi*t) + 127);
column = waveTable';
plot(waveTable)
data = dec2hex(column(1:256));
writematrix(data,'wave8.txt', 'Delimiter', 'space');

%% Frequency Modulation Modeling (must run wave table gen first)
%clear
modulationPhase = 0:6711:4294967295; %50 hz modulation
carrierPhase = 0:35115:4294967295; %261.63 hz carrier frequency
totalTime = 1600000; % total samples/clocks % i is a clock cycle basically 

%Generate modulation and carrier (for plotting) waveform 
modAccum(1) = 0;
carAccumPlt(1) = 0;
for i = 2:totalTime %this for loop calculates the accumulator value at every time step
    modAccum(i) = mod((modAccum(i-1)+6711), 4294967295); %50 hz modulation
    carAccumPlt(i) = mod((carAccumPlt(i-1) + 35115), 4294967295); %200 hz carrier 
end
%calculate wave table index, top 8 bits of phaseAccum (add 1 because matlab
%indexes at 1 
indexMod = bitshift(modAccum, -24)+1;
indexCarPlt = bitshift(carAccumPlt, -24)+1;

for i = 1:totalTime %use wavetable to find values of curve
    valsMod(i) = waveTable(indexMod(i));
    valsCarPlt(i) = waveTable(indexCarPlt(i));
end

% Generate Modulated Waveform
%y = sin(2pi*fc*t + sin(2pi*fm*t))
beta=300;
signalAccum(1) = double(valsMod(1));
for i = 2:totalTime
    signalAccum(i) = mod((signalAccum(i-1)+35115+(beta*double(valsMod(i)))),  4294967295); % can use MAC for this operation?
end
indexSig = bitshift(signalAccum, -24)+1;

for i = 1:totalTime
    valsSig(i) = waveTable(indexSig(i));
end

plot(valsSig)
hold on
plot(valsMod)
plot(valsCarPlt)
title("FM modulated signal generated by Phase Accumulation")
ylim([-10 260])
legend("Generated Signal", "Modulation Wave (50 Hz)", "Carrier Wave (c4 @ 261.63 Hz)")


%% 12 bits for 12 bit spi dac not needed if using FIR through MAC 
%


clear
t = 0:0.00024414062:1;
table = uint16(2047*sin(2*pi*t) + 2047);
column = table';
plot(table)
data = dec2hex(column(1:4096));
writematrix(data,'wave12.txt', 'Delimiter', 'space');


%% phase accumulator calculator

notes4 = [261.63 277.18 293.66 311.13 329.63 349.23 369.99 392 415.30 440 466.16 493.88];
fclk = 32000000; %16m?
indexes = 4096;
indexVal = 16777216; % 0x01000000
k = indexVal*indexes; %4096*0x01000000 for that value

addVal = (k.*notes4)./fclk;

roundedAddVal = round(addVal);

factual = (roundedAddVal.*fclk)./k;
fnoRound = (addVal.*fclk)./k;

error = 100*((notes4-factual)./notes4);
errorNoRound = 100*((notes4-fnoRound)./notes4);

factualLow = round((200000*fclk)/k);

%% not helpful?
%{
clear
sysClock = 10000;
sampFreq = sysClock;

dictNotes4 = dictionary('c4', 261.63, 'cS4', 277.18, 'd4', 293.66, ...
                    'dS4', 311.13, 'e4', 329.63, 'f4', 349.23, 'fS4', 369.99, ...
                    'g4', 392, 'gS4', 415.30, 'a4', 440, 'aS4', 466.16, 'b4', 493.88);

notes4 = [261.63 277.18 293.66 311.13 329.63 349.23 369.99 392 415.30 440 466.16 493.88];

t = 0:1/sampFreq:0.2; % times to sample at more than one full period for any note in 4th? key

for x = 1:length(notes4) 
    table(x, :) = uint8(127*sin(2*pi*notes4(x)*t) + 127);
end 

loopLocsc4 = find(table(1, :)==127);
loopLocscS4 = find(table(2, :)==127);
loopLocsd4 = find(table(3, :)==127);
loopLocsdS4 = find(table(4, :)==127);
loopLocse4 = find(table(5, :)==127);
loopLocsf4 = find(table(6, :)==127);
loopLocsfS4 = find(table(7, :)==127);
loopLocsg4 = find(table(8, :)==127);
loopLocsgS4 = find(table(9, :)==127);
loopLocsa4 = find(table(10, :)==127);
loopLocsaS4 = find(table(11, :)==127);
loopLocsb4 = find(table(12, :)==127);

finalList = cat(2, table(1, 1:344), table(2, 1:469), table(3, 1:647), ...
             table(4, 1:225), ...
             table(5, 1:613), ...
             table(6, 1:1174), ...
             table(7, 1:500), ...
             table(8, 1:1250), ...
             table(9, 1:915), ...
             table(10, 1:125), ...
             table(11, 1:665), ...
             table(12, 1:81) ...
             );

bad FM stuff
%% Phase accumulator modeling
modulationAccumulator = 0;
actualAccumulator = 0;
accumulator = 0;
% clocking every clock cycle things happen
for clk = 1:1600000
    modulationAccumulator(clk) = uint32(modulationAccumulator + 134218);
    actualAccumulator(clk) = uint32(actualAccumulator + 35115);
    accumulator(clk) = uint8(actualAccumulator(clk) + modulationAccumulator(clk));
    phaseIndex = bitshift(accumulator, -24)+1;
    finalVals(clk) = table(phaseIndex);
end

%}
